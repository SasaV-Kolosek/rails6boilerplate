# with reference to
# https://medium.com/@marilu597/getting-to-know-and-love-aws-elastic-beanstalk-configuration-files-ebextensions-9a4502a26e3c

files:
  "/etc/nginx/nginx.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      user nginx;
      worker_processes auto;
      error_log /var/log/nginx/error.log;
      pid /var/run/nginx.pid;

      # Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
      include /usr/share/nginx/modules/*.conf;

      events {
          worker_connections 1024;
      }

      http {
          log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                            '$status $body_bytes_sent "$http_referer" '
                            '"$http_user_agent" "$http_x_forwarded_for"';

          access_log  /var/log/nginx/access.log  main;

          sendfile            on;
          tcp_nopush          on;
          tcp_nodelay         on;
          keepalive_timeout   65;
          types_hash_max_size 2048;

          include             /etc/nginx/mime.types;
          default_type        application/octet-stream;

          # Load modular configuration files from the /etc/nginx/conf.d directory.
          # See http://nginx.org/en/docs/ngx_core_module.html#include
          # for more information.
          include /etc/nginx/conf.d/*.conf;
      }

  "/etc/nginx/conf.d/01_proxy.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      client_max_body_size 100M;

  "/etc/nginx/conf.d/02_app_server.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      # The content of this file is based on the content of `/etc/nginx/conf.d/webapp.conf` which is symlinked to `/opt/elasticbeanstalk/support/conf/webapp.conf` by default
      # `/etc/nginx/conf.d/webapp.conf` will be removed

      upstream app_upstream {
        server unix:///var/run/puma/my_app.sock;
      }

      ###################
      # For SSL - START #
      ###################
      # server {
      #     listen 80 default_server;

      #     return 301 https://$host$request_uri;
      # }

      # server {
      #     listen 80;

      #     server_name yourdomain.com;

      #     return 301 https://www.yourdomain.com$request_uri;
      # }

      # server {
      #     listen 443 default_server ssl;
      #     access_log var/log/nginx/access.log main;
      #     server_name www.yourdomain.com;

      #     include /etc/nginx/default.d/*.conf;

      #     ssl_certificate     /home/ec2-user/yourdomain.com.combined.crt;
      #     ssl_certificate_key /home/ec2-user/yourdomain.com.key;
      #     ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
      #     ssl_ciphers         HIGH:!aNULL:!MD5;

      #     client_header_timeout 60;
      #     client_body_timeout   60;
      #     keepalive_timeout     60;
      #     gzip                  off;
      #     gzip_comp_level       4;
      #     gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;

      #     root /var/app/current/public;

      #     location / {
      #         proxy_pass http://app_upstream; # match the name of upstream directive which is defined above
      #         proxy_set_header Host $host;
      #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      #         proxy_set_header X-Forwarded-Proto https;
      #         proxy_redirect off;
      #     }

      #     location ~ ^/(assets|packs)/ {
      #         gzip_static on;
      #         gzip on;
      #         expires max;
      #         add_header Cache-Control public;
      #     }
      # }
      #################
      # For SSL - END #
      #################

      #######################
      # For Non-SSL - START #
      #######################
      # server {
      #   listen 80;
      #   listen [::]:80 ;
      #   server_name localhost;

      #   include /etc/nginx/default.d/*.conf;

      #   access_log  /var/log/nginx/access.log  main;

      #   root /var/app/current/public;

      #   location ~ ^/(assets|packs)/ {
      #     gzip_static on;
      #     gzip on;
      #     expires max;
      #     add_header Cache-Control public;
      #   }

      #   location / {
      #     proxy_pass http://app_upstream;
      #     proxy_set_header Host $host;
      #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      #   }
      # }
      #####################
      # For Non-SSL - END #
      #####################

commands:
  01_remove_webapp_conf:
    command: "sudo rm -f /etc/nginx/conf.d/webapp.conf"
  # remove this on the first deployment of single instance server serving over https as the files are not present
  02_reload_nginx:
    command: "sudo service nginx reload"
